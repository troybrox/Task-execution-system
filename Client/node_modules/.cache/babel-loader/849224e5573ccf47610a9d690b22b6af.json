{"ast":null,"code":"var _jsxFileName = \"/home/oleg/Task-execution-system/Client/src/containers/Forget/Forget.js\";\nimport React from 'react';\nimport Layout from '../../hoc/Layout/Layout';\n\nclass Forget extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fields: [{\n        value: '',\n        label: 'Имя',\n        type: 'text',\n        valid: true\n      }, {\n        value: '',\n        label: 'Адрес эл. почты',\n        type: 'email',\n        valid: true\n      }, {\n        value: '',\n        label: 'Телефон',\n        type: 'text',\n        valid: true\n      }]\n    };\n\n    this.onSubmitHandler = event => {\n      event.preventDefault();\n      let success = true; // изначально проверка на валидность со значением true\n      // проверка полей авторизации или страницы забытого пароля\n\n      this.state.fields.forEach(el => {\n        success = el.valid && !!el.value && success;\n      }); // если все поля валидны, то есть success = true\n\n      if (success) {\n        window.location.pathname = '/success';\n      } else {\n        // если success = false, то показываем какие поля невалидны\n        this.emptyFieldsHandler();\n      }\n    };\n\n    this.onChangeHandler = (event, index) => {\n      let fields = [...this.state.fields];\n      let control = fields[index];\n      control.value = event.target.value;\n      control.valid = control.value.trim() !== '';\n      fields[index] = control;\n      this.setState({\n        fields\n      });\n    };\n\n    this.emptyFieldsHandler = () => {\n      const fields = [...this.state.fields];\n      fields.forEach(el => {\n        if (el.value === '') el.valid = false;\n      });\n      this.setState({\n        fields\n      });\n    };\n  }\n\n  // Layout - компонент высшего порядка для аутентификации\n  // (универсальный для регистрации, авторизации и восстановления пароля)\n  // поэтому вносим необходимые данные компонента восстановления пароля в props \n  // и редерим компонент Layout \n  render() {\n    return React.createElement(Layout, {\n      head: \"\\u0412\\u0445\\u043E\\u0434\",\n      hTitle: \"\\u0412\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044F\",\n      link: \"\\u0412\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\\u0441\\u044F\",\n      to: \"/auth\",\n      img: \"images/reg.png\",\n      fields: this.state.fields,\n      onChange: this.onChangeHandler,\n      onSubmit: this.onSubmitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"submit any_types_inputs\",\n      type: \"submit\",\n      value: \"\\u0412\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Forget;","map":{"version":3,"sources":["/home/oleg/Task-execution-system/Client/src/containers/Forget/Forget.js"],"names":["React","Layout","Forget","Component","state","fields","value","label","type","valid","onSubmitHandler","event","preventDefault","success","forEach","el","window","location","pathname","emptyFieldsHandler","onChangeHandler","index","control","target","trim","setState","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Layout from '../../hoc/Layout/Layout'\n\nclass Forget extends React.Component {\n    state = {\n        fields: [\n            { value: '', label: 'Имя', type: 'text', valid: true },\n            { value: '', label: 'Адрес эл. почты', type: 'email', valid: true },\n            { value: '', label: 'Телефон', type: 'text', valid: true },\n        ]\n    }\n\n        // функция для отправки формы на сервер с проверкой на корректность данных\n        onSubmitHandler = event => {\n            event.preventDefault()\n\n            let success = true // изначально проверка на валидность со значением true\n\n            // проверка полей авторизации или страницы забытого пароля\n            this.state.fields.forEach(el => {\n                success = el.valid && !!el.value && success\n            })\n    \n            // если все поля валидны, то есть success = true\n            if (success) {\n                window.location.pathname = '/success' \n            } else {\n                // если success = false, то показываем какие поля невалидны\n                this.emptyFieldsHandler()\n            }\n        }\n\n    // Отслеживаем изменение каждого input поля\n    onChangeHandler = (event, index) => {\n        let fields = [...this.state.fields]\n        let control = fields[index]\n\n        control.value = event.target.value\n        control.valid = control.value.trim() !== ''\n        \n        fields[index] = control\n\n        this.setState({\n            fields\n        })\n    }\n\n    emptyFieldsHandler = () => {\n\t\tconst fields = [...this.state.fields]\n\t\tfields.forEach(el => {\n\t\t\tif (el.value === '') el.valid = false\n\t\t})\n\n\t\tthis.setState({fields})\n\t}\n\n\t// Layout - компонент высшего порядка для аутентификации\n\t// (универсальный для регистрации, авторизации и восстановления пароля)\n\t// поэтому вносим необходимые данные компонента восстановления пароля в props \n\t// и редерим компонент Layout \n    render() {\n        return (\n            <Layout\n\t\t\t\thead='Вход'\n\t\t\t\thTitle='Восстановление пароля'\n                link='Вернуться'\n                to='/auth'\n                img='images/reg.png'\n                fields={this.state.fields}\n                onChange={this.onChangeHandler}\n                onSubmit={this.onSubmitHandler}\n\t\t\t>\n                <input className='submit any_types_inputs' type='submit' value='Восстановление' />\n\t\t\t</Layout>\n        )\n    }\n}\n\nexport default Forget"]},"metadata":{},"sourceType":"module"}