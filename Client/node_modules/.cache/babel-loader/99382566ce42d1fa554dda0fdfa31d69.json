{"ast":null,"code":"var _jsxFileName = \"/home/oleg/Task-execution-system/Client/src/containers/Registration/Registration.js\";\nimport React from 'react';\nimport './Registration.scss';\nimport Layout from '../../hoc/Layout/Layout';\nimport Label from '../../components/UI/Label/Label';\nimport Input from '../../components/UI/Input/Input';\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary';\n\nclass Registration extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      roles: ['Выберите роль', 'Преподаватель', 'Студент'],\n      fields: [{\n        value: '',\n        label: 'Имя пользователя',\n        type: 'text',\n        visible: true,\n        valid: true\n      }, {\n        value: '',\n        label: 'Адрес эл. почты',\n        type: 'email',\n        visible: true,\n        valid: true\n      }, {\n        value: '',\n        label: 'Роль',\n        type: 'select',\n        visible: true,\n        valid: true\n      }, {\n        value: '',\n        label: 'Кафедра',\n        type: 'text',\n        visible: true,\n        valid: true\n      }, {\n        value: '',\n        label: 'Факультет',\n        type: 'text',\n        visible: true,\n        valid: true\n      }, {\n        value: '',\n        label: 'Должность',\n        type: 'text',\n        visible: false,\n        valid: true\n      }, {\n        value: '',\n        label: 'Группа',\n        type: 'text',\n        visible: false,\n        valid: true\n      }, {\n        value: '',\n        label: 'Пароль',\n        type: 'password',\n        visible: true,\n        valid: true\n      }, {\n        value: '',\n        label: 'Введите пароль еще раз',\n        type: 'password',\n        visible: true,\n        valid: true\n      }]\n    };\n\n    this.onChangeHandler = (event, index) => {\n      let fields = [...this.state.fields];\n      let control = fields[index];\n      control.value = event.target.value;\n      control.valid = control.value !== '';\n      fields[index] = control;\n      this.setState({\n        fields\n      });\n    };\n\n    this.selectRole = role => {\n      const fields = [...this.state.fields];\n      const index = 5; // номер элемента, в state.fields, который мы будем, либо показывать, либо скрывать\n\n      fields[index].visible = false; // изначально скрываем поле Должность\n\n      fields[index + 1].visible = false; // так же скрываем поле Группа\n      // В зависимости от роли отображаем нужное, либо ничего не менчем\n\n      switch (role) {\n        case 'Преподаватель':\n          fields[index].visible = true;\n          break;\n\n        case 'Студент':\n          fields[index + 1].visible = true;\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        fields\n      });\n    };\n  }\n\n  // Рендерим поля для select(для выбора роли), данные о полях берем из массива state.roles\n  renderOptionRole() {\n    return this.state.roles.map((role, index) => {\n      return React.createElement(\"option\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, role);\n    });\n  } // Рендерим колону с label с помощью универсального компонента Label\n\n\n  renderLabels() {\n    return this.state.fields.map((item, index) => {\n      return item.visible ? React.createElement(Label, {\n        key: index,\n        label: item.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }) : null;\n    });\n  } // Рендерим колону с input, с помощью универсального компонента Input\n  // но так как у нас есть поле select, то делаем проверку на type\n  // и в случае type='select' выводим select\n\n\n  renderInputs() {\n    const select = React.createElement(Auxiliary, {\n      key: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"select\",\n      onChange: event => this.selectRole(event.target.value),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.renderOptionRole()), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }));\n    return this.state.fields.map((item, index) => {\n      return item.type === 'select' ? select : item.visible ? React.createElement(Input, {\n        key: index,\n        type: item.type,\n        value: item.value,\n        valid: item.valid,\n        onChange: event => this.onChangeHandler(event, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }) : null;\n    });\n  } // Layout - компонент высшего порядка для аутентификации\n  // (универсальный для регистрации и авторизации)\n  // поэтому вносим необходимые данные компонента регистрации в props \n  // и редерим компонент Layout \n\n\n  render() {\n    return React.createElement(Layout, {\n      head: \"\\u0412\\u0445\\u043E\\u0434\",\n      hTitle: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\",\n      link: \"\\u0423\\u0436\\u0435 \\u0435\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442? \\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435\\u0441\\u044C!\",\n      to: \"/auth\",\n      img: \"images/reg.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"all_labels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, this.renderLabels()), React.createElement(\"div\", {\n      className: \"all_inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.renderInputs(), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"submit input_fields\",\n      value: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Registration;","map":{"version":3,"sources":["/home/oleg/Task-execution-system/Client/src/containers/Registration/Registration.js"],"names":["React","Layout","Label","Input","Auxiliary","Registration","Component","state","roles","fields","value","label","type","visible","valid","onChangeHandler","event","index","control","target","setState","selectRole","role","renderOptionRole","map","renderLabels","item","renderInputs","select","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './Registration.scss'\nimport Layout from '../../hoc/Layout/Layout'\nimport Label from '../../components/UI/Label/Label'\nimport Input from '../../components/UI/Input/Input'\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary'\n\nclass Registration extends React.Component {\n\tstate = {\n\t\troles: ['Выберите роль','Преподаватель','Студент'],\n\t\tfields: [\n\t\t\t{ value: '', label: 'Имя пользователя', type: 'text', visible: true, valid: true },\n\t\t\t{ value: '', label: 'Адрес эл. почты', type: 'email', visible: true, valid: true },\n\t\t\t{ value: '', label: 'Роль', type: 'select', visible: true, valid: true },\n\t\t\t{ value: '', label: 'Кафедра', type: 'text', visible: true, valid: true },\n\t\t\t{ value: '', label: 'Факультет', type: 'text', visible: true, valid: true },\n\t\t\t{ value: '', label: 'Должность', type: 'text', visible: false, valid: true },\n\t\t\t{ value: '', label: 'Группа', type: 'text', visible: false, valid: true },\n\t\t\t{ value: '', label: 'Пароль', type: 'password', visible: true, valid: true },\n\t\t\t{ value: '', label: 'Введите пароль еще раз', type: 'password', visible: true, valid: true },\n\t\t]\n\t}\n\n\tonChangeHandler = (event, index) => {\n        let fields = [...this.state.fields]\n        let control = fields[index]\n\n        control.value = event.target.value\n        control.valid = control.value !== ''\n        \n        fields[index] = control\n\n        this.setState({\n            fields\n        })\n    }\n\t\n\t// Функция для динамического появления/скрытия дополнительного поля\n\t// при выборе роли пользователя\n\tselectRole = role => {\n\t\tconst fields = [...this.state.fields]\n\t\tconst index = 5 // номер элемента, в state.fields, который мы будем, либо показывать, либо скрывать\n\t\tfields[index].visible = false // изначально скрываем поле Должность\n\t\tfields[index + 1].visible = false // так же скрываем поле Группа\n\t\t\n\t\t// В зависимости от роли отображаем нужное, либо ничего не менчем\n\t\tswitch (role) {\n\t\t\tcase 'Преподаватель': \n\t\t\t\tfields[index].visible = true; \n\t\t\t\tbreak;\n\t\t\tcase 'Студент': \n\t\t\t\tfields[index + 1].visible = true; \n\t\t\t\tbreak;\n\t\t\tdefault: break;\n\t\t}\n\n\t\tthis.setState({\n\t\t\tfields\n\t\t})\n\t}\n\n\t// Рендерим поля для select(для выбора роли), данные о полях берем из массива state.roles\n\trenderOptionRole() {\n\t\treturn this.state.roles.map((role, index) => {\n\t\t\treturn (\n\t\t\t\t<option \n\t\t\t\t\tkey={index} \n\t\t\t\t>\n\t\t\t\t\t{role}\n\t\t\t\t</option>\n\t\t\t)\n\t\t})\n\t}\n\n\t// Рендерим колону с label с помощью универсального компонента Label\n\trenderLabels() {\n\t\treturn this.state.fields.map((item, index) => {\n\t\t\treturn item.visible ? <Label key={index} label={item.label} /> : null\n\t\t})\n\t}\n\n\t// Рендерим колону с input, с помощью универсального компонента Input\n\t// но так как у нас есть поле select, то делаем проверку на type\n\t// и в случае type='select' выводим select\n\trenderInputs() {\n\t\tconst select = (\n\t\t\t<Auxiliary key='select'>\n\t\t\t\t<select className='select' onChange={(event) => this.selectRole(event.target.value)} required>\n\t\t\t\t\t{ this.renderOptionRole() }\n\t\t\t\t</select><br />\n\t\t\t</Auxiliary>\n\t\t)\n\t\treturn this.state.fields.map((item, index) => {\n\t\t\treturn item.type === 'select' ? \n\t\t\t\tselect : \n\t\t\t\titem.visible ? \n\t\t\t\t\t<Input \n\t\t\t\t\t\tkey={index} \n\t\t\t\t\t\ttype={item.type} \n\t\t\t\t\t\tvalue={item.value}\n\t\t\t\t\t\tvalid={item.valid}\n\t\t\t\t\t\tonChange={event => this.onChangeHandler(event, index)}\n\t\t\t\t\t/> : null\n\t\t})\n\t}\n\n\t// Layout - компонент высшего порядка для аутентификации\n\t// (универсальный для регистрации и авторизации)\n\t// поэтому вносим необходимые данные компонента регистрации в props \n\t// и редерим компонент Layout \n\trender() {\n        return (\n\t\t\t<Layout\n\t\t\t\thead='Вход'\n\t\t\t\thTitle='Регистрация'\n\t\t\t\tlink='Уже есть аккаунт? Авторизируйтесь!'\n\t\t\t\tto='/auth'\n\t\t\t\timg='images/reg.png'\n\t\t\t>\n\t\t\t\t<div className='all_labels'>\n\t\t\t\t\t{ this.renderLabels() }\n\t\t\t\t</div>\n\n\t\t\t\t<div className='all_inputs'>\n\t\t\t\t\t{ this.renderInputs() }\n\t\t\t\t\t<input type='submit' className='submit input_fields' value='Регистрация пользователя' />\n\t\t\t\t</div>\n\t\t\t</Layout>\n        )\n    }\n}\n\nexport default Registration"]},"metadata":{},"sourceType":"module"}