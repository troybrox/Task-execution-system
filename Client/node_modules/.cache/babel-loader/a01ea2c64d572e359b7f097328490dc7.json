{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react_projects/Client/src/containers/Registration/Registration.js\";\nimport React from 'react';\nimport './Registration.scss';\nimport Layout from '../../hoc/Layout/Layout';\n\nclass Registration extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      roles: ['Выберите роль', 'Преподаватель', 'Студент'],\n      fields: [{\n        value: '',\n        label: 'Имя пользователя',\n        type: 'text',\n        valid: true\n      }, {\n        value: '',\n        label: 'Адрес эл. почты',\n        type: 'email',\n        valid: true\n      }, {\n        value: '',\n        label: 'Роль',\n        type: 'select',\n        valid: true\n      }, {\n        value: '',\n        label: 'Кафедра',\n        type: 'text',\n        valid: true\n      }, {\n        value: '',\n        label: 'Факультет',\n        type: 'text',\n        valid: true\n      }, {\n        value: '',\n        label: 'Должность',\n        type: 'text',\n        invisible: true,\n        valid: true\n      }, {\n        value: '',\n        label: 'Группа',\n        type: 'text',\n        invisible: true,\n        valid: true\n      }, {\n        value: '',\n        label: 'Пароль',\n        type: 'password',\n        valid: true\n      }, {\n        value: '',\n        label: 'Введите пароль еще раз',\n        type: 'password',\n        valid: true\n      }]\n    };\n\n    this.onChangeHandler = (event, index) => {\n      let fields = [...this.state.fields];\n      let control = fields[index];\n      control.value = event.target.value;\n      control.valid = control.value !== ''; // if (control.type === 'password') {\n      // \tfor\n      // }\n\n      fields[index] = control;\n      this.setState({\n        fields\n      });\n    };\n\n    this.selectRole = event => {\n      const fields = [...this.state.fields];\n      let id;\n      fields.forEach((el, index) => {\n        if (el.hasOwnProperty('invisible')) {\n          id = index;\n          return;\n        }\n      }); // номер элемента в state.fields, который мы будем, либо показывать, либо скрывать\n\n      fields[id].invisible = true; // изначально скрываем поле Должность\n\n      fields[id + 1].invisible = true; // так же скрываем поле Группа\n      // В зависимости от роли отображаем нужное, либо ничего не менчем\n\n      switch (event.target.value) {\n        case 'Преподаватель':\n          fields[id].invisible = false;\n          break;\n\n        case 'Студент':\n          fields[id + 1].invisible = false;\n          break;\n\n        default:\n          break;\n      } // Меняем поле Роли\n\n\n      fields.forEach((el, index) => {\n        if (el.type === 'select') {\n          id = index;\n        }\n      });\n      let control = fields[id];\n      control.value = event.target.value;\n      control.valid = control.value !== 'Выберите роль';\n      fields[id] = control;\n      this.setState({\n        fields\n      });\n    };\n\n    this.failPasswordsHandler = () => {\n      const fields = [...this.state.fields];\n      fields.forEach(el => {\n        if (el.type === 'password') el.valid = false;\n      });\n      this.setState({\n        fields\n      });\n    };\n\n    this.emptyFieldsHandler = () => {\n      const fields = [...this.state.fields];\n      fields.forEach(el => {\n        if (el.value === '') el.valid = false;\n      });\n      this.setState({\n        fields\n      });\n    };\n  }\n\n  // Layout - компонент высшего порядка для аутентификации\n  // (универсальный для регистрации, авторизации и восстановления пароля)\n  // поэтому вносим необходимые данные компонента регистрации в props \n  // и редерим компонент Layout \n  render() {\n    return React.createElement(Layout, {\n      head: \"\\u0412\\u0445\\u043E\\u0434\",\n      hTitle: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\",\n      link: \"\\u0423\\u0436\\u0435 \\u0435\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442? \\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435\\u0441\\u044C!\",\n      to: \"/auth\",\n      img: \"images/reg.png\",\n      fields: this.state.fields,\n      roles: this.state.roles,\n      onChange: this.onChangeHandler,\n      onSelect: this.selectRole,\n      failPasswords: this.failPasswordsHandler,\n      emptyFields: this.emptyFieldsHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"submit input_fields\",\n      type: \"submit\",\n      value: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Registration;","map":{"version":3,"sources":["/var/www/html/react_projects/Client/src/containers/Registration/Registration.js"],"names":["React","Layout","Registration","Component","state","roles","fields","value","label","type","valid","invisible","onChangeHandler","event","index","control","target","setState","selectRole","id","forEach","el","hasOwnProperty","failPasswordsHandler","emptyFieldsHandler","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './Registration.scss'\nimport Layout from '../../hoc/Layout/Layout'\n\nclass Registration extends React.Component {\n\tstate = {\n\t\troles: ['Выберите роль','Преподаватель','Студент'],\n\t\tfields: [\n\t\t\t{ value: '', label: 'Имя пользователя', type: 'text', valid: true },\n\t\t\t{ value: '', label: 'Адрес эл. почты', type: 'email', valid: true },\n\t\t\t{ value: '', label: 'Роль', type: 'select', valid: true },\n\t\t\t{ value: '', label: 'Кафедра', type: 'text', valid: true },\n\t\t\t{ value: '', label: 'Факультет', type: 'text', valid: true },\n\t\t\t{ value: '', label: 'Должность', type: 'text', invisible: true, valid: true },\n\t\t\t{ value: '', label: 'Группа', type: 'text', invisible: true, valid: true },\n\t\t\t{ value: '', label: 'Пароль', type: 'password', valid: true },\n\t\t\t{ value: '', label: 'Введите пароль еще раз', type: 'password', valid: true },\n\t\t]\n\t}\n\n\t// Отслеживаем изменение каждого input поля\n\tonChangeHandler = (event, index) => {\n        let fields = [...this.state.fields]\n        let control = fields[index]\n\n        control.value = event.target.value\n\t\tcontrol.valid = control.value !== ''\n\t\t\n\t\t// if (control.type === 'password') {\n\t\t// \tfor\n\t\t// }\n        \n        fields[index] = control\n\n        this.setState({\n            fields\n        })\n    }\n\t\n\t// Функция для динамического появления/скрытия дополнительного поля\n\t// при выборе роли пользователя\n\t// + изменение поля Роли\n\tselectRole = event => {\n\t\tconst fields = [...this.state.fields]\n\t\tlet id;\n\t\tfields.forEach((el, index) => {\n\t\t\tif (el.hasOwnProperty('invisible')) {\n\t\t\t\tid = index\n\t\t\t\treturn\n\t\t\t} \n\t\t})\n\t \t// номер элемента в state.fields, который мы будем, либо показывать, либо скрывать\n\t\tfields[id].invisible = true // изначально скрываем поле Должность\n\t\tfields[id + 1].invisible = true // так же скрываем поле Группа\n\t\t\n\t\t// В зависимости от роли отображаем нужное, либо ничего не менчем\n\t\tswitch (event.target.value) {\n\t\t\tcase 'Преподаватель': \n\t\t\t\tfields[id].invisible = false\n\t\t\t\tbreak;\n\t\t\tcase 'Студент': \n\t\t\t\tfields[id + 1].invisible = false\n\t\t\t\tbreak;\n\t\t\tdefault: break;\n\t\t}\n\n\t\t// Меняем поле Роли\n\t\tfields.forEach((el, index) => {\n\t\t\tif (el.type === 'select') {\n\t\t\t\tid = index \n\t\t\t} \n\t\t})\n\n\t\tlet control = fields[id]\n\n\t\tcontrol.value = event.target.value\n\t\tcontrol.valid = control.value !== 'Выберите роль'\n\t\t\n\t\tfields[id] = control\n\n\t\tthis.setState({\n\t\t\tfields\n\t\t})\n\t}\n\n\tfailPasswordsHandler = () => {\n\t\tconst fields = [...this.state.fields]\n\t\tfields.forEach(el => {\n\t\t\tif (el.type === 'password')\tel.valid = false\n\t\t})\n\n\t\tthis.setState({fields})\n\t}\n\n\temptyFieldsHandler = () => {\n\t\tconst fields = [...this.state.fields]\n\t\tfields.forEach(el => {\n\t\t\tif (el.value === '') el.valid = false\n\t\t})\n\n\t\tthis.setState({fields})\n\t}\n\n\t// Layout - компонент высшего порядка для аутентификации\n\t// (универсальный для регистрации, авторизации и восстановления пароля)\n\t// поэтому вносим необходимые данные компонента регистрации в props \n\t// и редерим компонент Layout \n\trender() {\n        return (\n\t\t\t<Layout\n\t\t\t\thead='Вход'\n\t\t\t\thTitle='Регистрация'\n\t\t\t\tlink='Уже есть аккаунт? Авторизируйтесь!'\n\t\t\t\tto='/auth'\n\t\t\t\timg='images/reg.png'\n\t\t\t\tfields={this.state.fields}\n\t\t\t\troles={this.state.roles}\n\t\t\t\tonChange={this.onChangeHandler}\n\t\t\t\tonSelect={this.selectRole}\n\t\t\t\tfailPasswords={this.failPasswordsHandler}\n\t\t\t\temptyFields={this.emptyFieldsHandler}\n\t\t\t>\n\t\t\t\t<input className='submit input_fields' type='submit' value='Регистрация пользователя' />\n\t\t\t</Layout>\n        )\n    }\n}\n\nexport default Registration"]},"metadata":{},"sourceType":"module"}