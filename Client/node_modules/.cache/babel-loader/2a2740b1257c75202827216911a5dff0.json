{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react_projects/Client/src/hoc/Layout/Layout.js\";\nimport React from 'react';\nimport './Layout.scss';\nimport { Link } from 'react-router-dom'; // import { browserHistory } from 'react-router'\n\nimport Auxiliary from '../Auxiliary/Auxiliary';\nimport Label from '../../components/UI/Label/Label';\nimport Input from '../../components/UI/Input/Input'; // import Main from '../../containers/Main/Main'\n// import Success from '../../containers/Success/Success'\n\nclass Layout extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {} //\n    // функция для отправки формы на сервер с некоторой проверкой на корректность данных\n    ;\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      let success = true;\n\n      if (this.props.hTitle === 'Регистрация') {\n        let password1 = '',\n            password2 = '';\n        this.props.fields.forEach(el => {\n          success = el.valid && el.value && success;\n          console.log(el.label + ' ' + success);\n\n          if (el.type === 'password') {\n            if (password1 === '') {\n              password1 = el.value;\n            } else {\n              password2 = el.value;\n            }\n          }\n        });\n\n        if (password1 !== password2) {\n          this.props.failPasswords();\n        }\n      } else {\n        this.props.fields.forEach(el => {\n          success = el.valid && !!el.value && success;\n        });\n      } // console.log(this.props.hTitle)\n\n\n      if (success) {\n        if (this.props.hTitle === 'Регистрация') {\n          // browserHistory.push('/success');\n          window.location.pathname = '/success';\n        } else {\n          // browserHistory.push('/');\n          window.location.pathname = '/';\n        } // отправка данных, включая hTitle\n        // ждем ответ от сервера\n        // прогружаем другую страницу\n        // axios\n        // const request = new XMLHttpRequest()\n        // const url = 'index.php'\n        // const data = {\n        //     page: this.props.hTitle, \n        //     fields: this.props.fields\n        // }\n        // request.open('POST', url)\n        // request.send(data)\n        // request.onload = function() {\n        //     console.log(this.response)\n        // }\n        // request.onerror = function() {\n        //     console.log(\"Запрос не удался\");\n        // }\n\n      } else {\n        console.log(this.props.hTitle);\n        this.props.emptyFields();\n      }\n    };\n\n    this.selectShow = item => {\n      const cls = ['select'];\n      if (!item.valid) cls.push('invalid');\n      const select = React.createElement(Auxiliary, {\n        key: \"select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: cls.join(' '),\n        onChange: event => this.props.onSelect(event),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.renderOptionRole()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }));\n      return select;\n    };\n  }\n\n  // Рендерим поля для select(для выбора роли), данные о полях берем из массива state.roles\n  renderOptionRole() {\n    return this.props.roles.map((role, index) => {\n      return React.createElement(\"option\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, role);\n    });\n  } // Рендерим колону с label с помощью универсального компонента Label\n\n\n  renderLabels() {\n    return this.props.fields.map((item, index) => {\n      return item.invisible ? null : React.createElement(Label, {\n        key: index,\n        label: item.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      });\n    });\n  }\n\n  // Рендерим колону с input с помощью универсального компонента Input\n  // но так как у нас есть поле select в регистрации, \n  // то проверяем для регистрации ли этот компонент\n  // и если это так, то потом делаем проверку на type\n  // и в случае type='select' выводим select\n  renderInputs() {\n    if (this.props.hTitle === 'Регистрация') {\n      return this.props.fields.map((item, index) => {\n        return item.type === 'select' ? this.selectShow(item) : item.invisible ? null : React.createElement(Input, {\n          key: index,\n          type: item.type,\n          value: item.value,\n          valid: item.valid,\n          onChange: event => this.props.onChange(event, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        });\n      });\n    } else {\n      return this.props.fields.map((item, index) => {\n        return React.createElement(Input, {\n          key: index,\n          type: item.type,\n          value: item.value,\n          valid: item.valid,\n          onChange: event => this.props.onChange(event, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        });\n      });\n    }\n  } // Рендерим компонент аутентификации\n  // так же используем Link из библиотеки реакта для роутинга\n\n\n  render() {\n    return React.createElement(Auxiliary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: this.props.to,\n      className: \"top_link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.img,\n      alt: this.props.head,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, this.props.head))), React.createElement(\"main\", {\n      className: \"form_box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, this.props.hTitle), React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"all_labels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, this.renderLabels()), React.createElement(\"div\", {\n      className: \"all_inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, this.renderInputs(), this.props.children)), React.createElement(Link, {\n      to: this.props.to,\n      className: \"link_registration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, this.props.link)));\n  }\n\n}\n\nexport default Layout;","map":{"version":3,"sources":["/var/www/html/react_projects/Client/src/hoc/Layout/Layout.js"],"names":["React","Link","Auxiliary","Label","Input","Layout","Component","state","submitHandler","event","preventDefault","success","props","hTitle","password1","password2","fields","forEach","el","valid","value","console","log","label","type","failPasswords","window","location","pathname","emptyFields","selectShow","item","cls","push","select","join","onSelect","renderOptionRole","roles","map","role","index","renderLabels","invisible","renderInputs","onChange","render","to","img","head","children","link"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './Layout.scss'\nimport {Link} from 'react-router-dom'\n// import { browserHistory } from 'react-router'\nimport Auxiliary from '../Auxiliary/Auxiliary'\nimport Label from '../../components/UI/Label/Label'\nimport Input from '../../components/UI/Input/Input'\n// import Main from '../../containers/Main/Main'\n// import Success from '../../containers/Success/Success'\n\n\nclass Layout extends React.Component {\n    state = {\n        //\n    }\n    \n    // функция для отправки формы на сервер с некоторой проверкой на корректность данных\n    submitHandler = event => {\n        event.preventDefault()\n        \n        let success = true\n        if (this.props.hTitle === 'Регистрация') {\n\n            let password1 = '', password2 = ''\n            this.props.fields.forEach(el => {\n                success = el.valid && el.value && success\n                console.log(el.label + ' ' + success)\n                if (el.type === 'password') {\n                    if (password1 === '') {\n                        password1 = el.value\n                    } else {\n                        password2 = el.value\n                    }\n                }\n            })\n\n            if (password1 !== password2) {\n                this.props.failPasswords()\n            }\n        } else {\n            this.props.fields.forEach(el => {\n                success = el.valid && !!el.value && success\n            })\n        }\n        // console.log(this.props.hTitle)\n\n        if (success) {\n            if (this.props.hTitle === 'Регистрация') {\n                // browserHistory.push('/success');\n                window.location.pathname = '/success'\n            } else {\n                // browserHistory.push('/');\n                window.location.pathname = '/'\n            }\n\n            // отправка данных, включая hTitle\n            // ждем ответ от сервера\n            // прогружаем другую страницу\n// axios\n            // const request = new XMLHttpRequest()\n            // const url = 'index.php'\n            // const data = {\n            //     page: this.props.hTitle, \n            //     fields: this.props.fields\n            // }\n            // request.open('POST', url)\n            // request.send(data)\n\n            // request.onload = function() {\n            //     console.log(this.response)\n            // }\n\n            // request.onerror = function() {\n            //     console.log(\"Запрос не удался\");\n            // }\n        } else {\n            console.log(this.props.hTitle)\n            this.props.emptyFields()\n        }\n        \n    }\n\n    // Рендерим поля для select(для выбора роли), данные о полях берем из массива state.roles\n\trenderOptionRole() {\n\t\treturn this.props.roles.map((role, index) => {\n\t\t\treturn (\n\t\t\t\t<option \n\t\t\t\t\tkey={index} \n\t\t\t\t>\n\t\t\t\t\t{role}\n\t\t\t\t</option>\n\t\t\t)\n\t\t})\n\t}\n\n    // Рендерим колону с label с помощью универсального компонента Label\n\trenderLabels() {\n\t\treturn this.props.fields.map((item, index) => {\n\t\t\treturn item.invisible ? null : <Label key={index} label={item.label} />\n\t\t})\n    }\n    \n    selectShow = item => {\n        const cls = ['select']\n        if (!item.valid) cls.push('invalid')\n\n        const select = (\n            <Auxiliary key='select'>\n                <select \n                        className={cls.join(' ')} \n                        onChange={event => this.props.onSelect(event)} \n                        required\n                >\n                    { this.renderOptionRole() }\n                </select><br />\n            </Auxiliary>\n        )\n        return select\n    }\n\n    // Рендерим колону с input с помощью универсального компонента Input\n    // но так как у нас есть поле select в регистрации, \n    // то проверяем для регистрации ли этот компонент\n    // и если это так, то потом делаем проверку на type\n\t// и в случае type='select' выводим select\n    renderInputs() {\n        if (this.props.hTitle === 'Регистрация') {\n\n            return this.props.fields.map((item, index) => {\n                return item.type === 'select' ? \n                    this.selectShow(item) : \n                    item.invisible ? null :\n                        <Input \n                            key={index} \n                            type={item.type} \n                            value={item.value}\n                            valid={item.valid}\n                            onChange={event => this.props.onChange(event, index)}\n                        />\n            })\n        } else {\n            return this.props.fields.map((item, index) => {\n                return <Input \n                    key={index} \n                    type={item.type} \n                    value={item.value}\n                    valid={item.valid}\n                    onChange={event => this.props.onChange(event, index)}\n                    />\n            })\n        }\n    }\n\n    // Рендерим компонент аутентификации\n    // так же используем Link из библиотеки реакта для роутинга\n    render() {\n        return (\n            <Auxiliary>\n                <header className='header'>\n                    <Link to={this.props.to} className='top_link'>\n                        <img src={this.props.img} alt={this.props.head}/>\n                        <span>{this.props.head}</span>\n                    </Link>\n                </header>\n            \n                <main className=\"form_box\">\n                    <h2>{this.props.hTitle}</h2>\n\n                    <form onSubmit={this.submitHandler}>\n                        <div className='all_labels'>\n\t\t\t\t\t        { this.renderLabels() }\n\t\t\t\t        </div>\n\n\t\t\t\t        <div className='all_inputs'>\n\t\t\t\t\t        { this.renderInputs() }\n                            { this.props.children }\n\t\t\t\t        </div>\n                    </form>\n\n                    <Link to={this.props.to} className='link_registration'>\n                        {this.props.link}\n                    </Link>\n                </main>\n            </Auxiliary>\n        )\n    }\n}\n\nexport default Layout\n"]},"metadata":{},"sourceType":"module"}