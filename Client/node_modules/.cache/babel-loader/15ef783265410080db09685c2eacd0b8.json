{"ast":null,"code":"var _jsxFileName = \"/home/oleg/Task-execution-system/Client/src/containers/Auth/Auth.js\";\nimport React from 'react';\nimport './Auth.scss';\nimport Layout from '../../hoc/Layout/Layout';\nimport Label from '../../components/UI/Label/Label';\nimport Input from '../../components/UI/Input/Input';\nimport { NavLink } from 'react-router-dom';\n\nclass Auth extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fields: [{\n        value: '',\n        label: 'Имя пользователя/Email',\n        type: 'text',\n        valid: true\n      }, {\n        value: '',\n        label: 'Пароль',\n        type: 'password',\n        valid: true\n      }]\n    };\n\n    this.onChangeHandler = (event, index) => {\n      let fields = [...this.state.fields];\n      let control = fields[index];\n      control.value = event.target.value;\n      control.valid = control.value !== '';\n      fields[index] = control;\n      this.setState({\n        fields\n      });\n    };\n  }\n\n  // Рендерим колону с label с помощью универсального компонента Label\n  renderLabels() {\n    return this.state.fields.map((item, index) => {\n      return React.createElement(Label, {\n        key: index,\n        label: item.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    });\n  } // Рендерим колону с input с помощью универсального компонента Input\n\n\n  renderInputs() {\n    return this.state.fields.map((item, index) => {\n      return React.createElement(Input, {\n        key: index,\n        type: item.type,\n        value: item.value,\n        valid: item.valid,\n        onChange: event => this.onChangeHandler(event, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n    });\n  } // Layout - компонент высшего порядка для аутентификации\n  // (универсальный для регистрации и авторизации)\n  // поэтому вносим необходимые данные компонента авторизации в props \n  // и редерим компонент Layout \n\n\n  render() {\n    return React.createElement(Layout, {\n      head: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\",\n      hTitle: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\",\n      link: \"\\u041D\\u0443\\u0436\\u0435\\u043D \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442? \\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435\\u0441\\u044C!\",\n      to: \"/registration\",\n      img: \"images/user.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"all_labels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.renderLabels()), React.createElement(\"div\", {\n      className: \"all_inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.renderInputs(), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"checkbox\",\n      className: \"any_types_inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"label check_label\",\n      htmlFor: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"\\u0417\\u0430\\u043F\\u043E\\u043C\\u043D\\u0438\\u0442\\u044C \\u043C\\u0435\\u043D\\u044F\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"submit any_types_inputs\",\n      type: \"submit\",\n      value: \"\\u0412\\u0445\\u043E\\u0434\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(NavLink, {\n      to: \"/forget\",\n      className: \"forgot_pass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"\\u0417\\u0430\\u0431\\u044B\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C?\"))));\n  }\n\n}\n\nexport default Auth;","map":{"version":3,"sources":["/home/oleg/Task-execution-system/Client/src/containers/Auth/Auth.js"],"names":["React","Layout","Label","Input","NavLink","Auth","Component","state","fields","value","label","type","valid","onChangeHandler","event","index","control","target","setState","renderLabels","map","item","renderInputs","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './Auth.scss'\nimport Layout from '../../hoc/Layout/Layout'\nimport Label from '../../components/UI/Label/Label'\nimport Input from '../../components/UI/Input/Input'\nimport { NavLink } from 'react-router-dom'\n\nclass Auth extends React.Component {\n    state = {\n        fields: [\n            { value: '', label: 'Имя пользователя/Email', type: 'text', valid: true },\n            { value: '', label: 'Пароль', type: 'password', valid: true }\n        ]\n    }\n\n    onChangeHandler = (event, index) => {\n        let fields = [...this.state.fields]\n        let control = fields[index]\n\n        control.value = event.target.value\n        control.valid = control.value !== ''\n        \n        fields[index] = control\n\n        this.setState({\n            fields\n        })\n    }\n\n    // Рендерим колону с label с помощью универсального компонента Label\n    renderLabels() {\n        return this.state.fields.map((item, index) => {\n\t\t\treturn <Label key={index} label={item.label}/>\n\t\t})\n    }\n\n    // Рендерим колону с input с помощью универсального компонента Input\n    renderInputs() {\n        return this.state.fields.map((item, index) => {\n            return <Input \n                key={index} \n                type={item.type} \n                value={item.value}\n                valid={item.valid}\n                onChange={event => this.onChangeHandler(event, index)}\n                />\n\t\t})\n    }\n    \n\n\t// Layout - компонент высшего порядка для аутентификации\n\t// (универсальный для регистрации и авторизации)\n\t// поэтому вносим необходимые данные компонента авторизации в props \n\t// и редерим компонент Layout \n    render() {\n        return (\n            <Layout\n\t\t\t\thead='Регистрация'\n\t\t\t\thTitle='Авторизация'\n                link='Нужен аккаунт? Зарегистрируйтесь!'\n                to='/registration'\n                img='images/user.png'\n\t\t\t>\n                <div className='all_labels'>\n                    { this.renderLabels() }\n                </div>\n\n                <div className='all_inputs'>\n                    { this.renderInputs() }<br />\n                    \n                    <input type='checkbox' id='checkbox' className='any_types_inputs' />\n                    <label className='label check_label' htmlFor='checkbox'>Запомнить меня</label><br />\n                    <input className='submit any_types_inputs' type='submit' value='Вход' />\n                    <NavLink to='/forget' className='forgot_pass'>\n                        <span>Забыли пароль?</span>\n                    </NavLink>\n                    {/* <a className='forgot_pass' href='http://'>Забыли пароль?</a> */}\n                </div>\n\t\t\t</Layout>\n        )\n    }\n}\n\nexport default Auth"]},"metadata":{},"sourceType":"module"}