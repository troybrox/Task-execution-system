{"ast":null,"code":"var _jsxFileName = \"/home/oleg/Task-execution-system/Client/src/hoc/Layout/Layout.js\";\nimport React from 'react';\nimport './Layout.scss';\nimport { Link } from 'react-router-dom';\nimport Auxiliary from '../Auxiliary/Auxiliary';\nimport Label from '../../components/UI/Label/Label';\nimport Input from '../../components/UI/Input/Input';\n\nclass Layout extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.selectShow = item => {\n      const cls = ['select'];\n      if (!item.valid) cls.push('invalid');\n      const select = React.createElement(Auxiliary, {\n        key: \"select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: cls.join(' '),\n        onChange: event => this.props.onSelect(event),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.renderOptionRole()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }));\n      return select;\n    };\n  }\n\n  // Рендерим поля для select(для выбора роли), данные о полях берем из массива state.roles\n  renderOptionRole() {\n    return this.props.roles.map((role, index) => {\n      return React.createElement(\"option\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, role);\n    });\n  } // Рендерим колону с label с помощью универсального компонента Label\n\n\n  renderLabels() {\n    return this.props.fields.map((item, index) => {\n      return item.invisible ? null : React.createElement(Label, {\n        key: index,\n        label: item.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      });\n    });\n  }\n\n  // Рендерим колону с input с помощью универсального компонента Input\n  // но так как у нас есть поле select в регистрации, \n  // то проверяем для регистрации ли этот компонент\n  // и если это так, то потом делаем проверку на type\n  // и в случае type='select' выводим select\n  renderInputs() {\n    if (this.props.hTitle === 'Регистрация') {\n      return this.props.fields.map((item, index) => {\n        return item.type === 'select' ? this.selectShow(item) : item.invisible ? null : React.createElement(Input, {\n          key: index,\n          type: item.type,\n          value: item.value,\n          valid: item.valid,\n          onChange: event => this.props.onChange(event, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n      });\n    } else {\n      return this.props.fields.map((item, index) => {\n        return React.createElement(Input, {\n          key: index,\n          type: item.type,\n          value: item.value,\n          valid: item.valid,\n          onChange: event => this.props.onChange(event, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      });\n    }\n  } // Рендерим компонент аутентификации\n  // так же используем Link из библиотеки реакта для роутинга\n\n\n  render() {\n    return React.createElement(Auxiliary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: this.props.to,\n      className: \"top_link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.img,\n      alt: this.props.head,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.props.head))), React.createElement(\"main\", {\n      className: \"form_box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.props.hTitle), React.createElement(\"form\", {\n      onSubmit: this.props.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"all_labels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.renderLabels()), React.createElement(\"div\", {\n      className: \"all_inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.renderInputs(), this.props.children)), React.createElement(Link, {\n      to: this.props.to,\n      className: \"link_registration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.props.link)));\n  }\n\n}\n\nexport default Layout;","map":{"version":3,"sources":["/home/oleg/Task-execution-system/Client/src/hoc/Layout/Layout.js"],"names":["React","Link","Auxiliary","Label","Input","Layout","Component","selectShow","item","cls","valid","push","select","join","event","props","onSelect","renderOptionRole","roles","map","role","index","renderLabels","fields","invisible","label","renderInputs","hTitle","type","value","onChange","render","to","img","head","onSubmit","children","link"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './Layout.scss'\nimport {Link} from 'react-router-dom'\nimport Auxiliary from '../Auxiliary/Auxiliary'\nimport Label from '../../components/UI/Label/Label'\nimport Input from '../../components/UI/Input/Input'\n\nclass Layout extends React.Component {\n   \n    // Рендерим поля для select(для выбора роли), данные о полях берем из массива state.roles\n\trenderOptionRole() {\n\t\treturn this.props.roles.map((role, index) => {\n\t\t\treturn (\n\t\t\t\t<option \n\t\t\t\t\tkey={index} \n\t\t\t\t>\n\t\t\t\t\t{role}\n\t\t\t\t</option>\n\t\t\t)\n\t\t})\n\t}\n\n    // Рендерим колону с label с помощью универсального компонента Label\n\trenderLabels() {\n\t\treturn this.props.fields.map((item, index) => {\n\t\t\treturn item.invisible ? null : <Label key={index} label={item.label} />\n\t\t})\n    }\n    \n    selectShow = item => {\n        const cls = ['select']\n        if (!item.valid) cls.push('invalid')\n\n        const select = (\n            <Auxiliary key='select'>\n                <select \n                        className={cls.join(' ')} \n                        onChange={event => this.props.onSelect(event)} \n                        required\n                >\n                    { this.renderOptionRole() }\n                </select><br />\n            </Auxiliary>\n        )\n        return select\n    }\n\n    // Рендерим колону с input с помощью универсального компонента Input\n    // но так как у нас есть поле select в регистрации, \n    // то проверяем для регистрации ли этот компонент\n    // и если это так, то потом делаем проверку на type\n\t// и в случае type='select' выводим select\n    renderInputs() {\n        if (this.props.hTitle === 'Регистрация') {\n\n            return this.props.fields.map((item, index) => {\n                return item.type === 'select' ? \n                    this.selectShow(item) : \n                    item.invisible ? null :\n                        <Input \n                            key={index} \n                            type={item.type} \n                            value={item.value}\n                            valid={item.valid}\n                            onChange={event => this.props.onChange(event, index)}\n                        />\n            })\n        } else {\n            return this.props.fields.map((item, index) => {\n                return <Input \n                    key={index} \n                    type={item.type} \n                    value={item.value}\n                    valid={item.valid}\n                    onChange={event => this.props.onChange(event, index)}\n                    />\n            })\n        }\n    }\n\n    // Рендерим компонент аутентификации\n    // так же используем Link из библиотеки реакта для роутинга\n    render() {\n        return (\n            <Auxiliary>\n                <header className='header'>\n                    <Link to={this.props.to} className='top_link'>\n                        <img src={this.props.img} alt={this.props.head}/>\n                        <span>{this.props.head}</span>\n                    </Link>\n                </header>\n            \n                <main className=\"form_box\">\n                    <h2>{this.props.hTitle}</h2>\n\n                    <form onSubmit={this.props.onSubmit}>\n                        <div className='all_labels'>\n\t\t\t\t\t        { this.renderLabels() }\n\t\t\t\t        </div>\n\n\t\t\t\t        <div className='all_inputs'>\n\t\t\t\t\t        { this.renderInputs() }\n                            { this.props.children }\n\t\t\t\t        </div>\n                    </form>\n\n                    <Link to={this.props.to} className='link_registration'>\n                        {this.props.link}\n                    </Link>\n                </main>\n            </Auxiliary>\n        )\n    }\n}\n\nexport default Layout\n"]},"metadata":{},"sourceType":"module"}