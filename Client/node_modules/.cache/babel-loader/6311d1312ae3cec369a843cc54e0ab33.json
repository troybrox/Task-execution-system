{"ast":null,"code":"var _jsxFileName = \"/home/oleg/Task-execution-system/Client/src/hoc/Layout/Layout.js\";\nimport React from 'react';\nimport './Layout.scss';\nimport { NavLink } from 'react-router-dom';\nimport Auxiliary from '../Auxiliary/Auxiliary';\nimport Label from '../../components/UI/Label/Label';\nimport Input from '../../components/UI/Input/Input';\n\nclass Layout extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      console.log(this.props.fields);\n      const success = true;\n\n      if (this.props.hTitle === 'Регистрация') {\n        const password1 = '',\n              password2 = '';\n        this.props.fields.forEach(el => {\n          success = el.valid && success;\n          el.type === 'password' ? password1 === '' ? password1 = el.value : password2 = el.value : null;\n        });\n\n        if (password1 !== password2) {\n          this.props.failPasswords();\n        }\n      } else {\n        this.props.fields.forEach(el => {\n          success = el.valid && success;\n        });\n      }\n\n      if (success) {\n        // отправка данных, включая hTitle\n        // ждем ответ от сервера\n        // прогружаем другую страницу\n        ajax({\n          url: '../../server/index.php',\n          // '../src/server/index.php'\n          type: 'POST',\n          data: {\n            page: this.props.hTitle,\n            fields: this.props.fields\n          },\n          dataType: 'html',\n          success: this.successHandler\n        });\n      }\n    };\n\n    this.successHandler = data => {\n      console.log(data);\n    };\n\n    this.selectShow = item => {\n      const cls = ['select'];\n      if (!item.valid) cls.push('invalid');\n      const select = React.createElement(Auxiliary, {\n        key: \"select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: cls.join(' '),\n        onChange: event => this.props.onSelect(event),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.renderOptionRole()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }));\n      return select;\n    };\n  }\n\n  // Рендерим поля для select(для выбора роли), данные о полях берем из массива state.roles\n  renderOptionRole() {\n    return this.props.roles.map((role, index) => {\n      return React.createElement(\"option\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, role);\n    });\n  } // Рендерим колону с label с помощью универсального компонента Label\n\n\n  renderLabels() {\n    return this.props.fields.map((item, index) => {\n      return item.invisible ? null : React.createElement(Label, {\n        key: index,\n        label: item.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      });\n    });\n  }\n\n  // Рендерим колону с input с помощью универсального компонента Input\n  // но так как у нас есть поле select в регистрации, \n  // то проверяем для регистрации ли этот компонент\n  // и если это так, то потом делаем проверку на type\n  // и в случае type='select' выводим select\n  renderInputs() {\n    if (this.props.hTitle === 'Регистрация') {\n      return this.props.fields.map((item, index) => {\n        return item.type === 'select' ? this.selectShow(item) : item.invisible ? null : React.createElement(Input, {\n          key: index,\n          type: item.type,\n          value: item.value,\n          valid: item.valid,\n          onChange: event => this.onChange(event, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        });\n      });\n    } else {\n      return this.props.fields.map((item, index) => {\n        return React.createElement(Input, {\n          key: index,\n          type: item.type,\n          value: item.value,\n          valid: item.valid,\n          onChange: event => this.onChangeHandler(event, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        });\n      });\n    }\n  } // Рендерим компонент аутентификации\n  // так же используем NavLink из библиотеки реакта для роутинга\n\n\n  render() {\n    return React.createElement(Auxiliary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: this.props.to,\n      className: \"top_link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.img,\n      alt: this.props.hTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, this.props.head))), React.createElement(\"main\", {\n      className: \"form_box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, this.props.hTitle), React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"all_labels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, this.renderLabels()), React.createElement(\"div\", {\n      className: \"all_inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, this.renderInputs(), this.props.children)), React.createElement(NavLink, {\n      to: this.props.to,\n      className: \"link_registration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, this.props.link), React.createElement(\"select\", {\n      multiple: true,\n      value: ['B', 'C'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Layout;","map":{"version":3,"sources":["/home/oleg/Task-execution-system/Client/src/hoc/Layout/Layout.js"],"names":["React","NavLink","Auxiliary","Label","Input","Layout","Component","state","submitHandler","event","preventDefault","console","log","props","fields","success","hTitle","password1","password2","forEach","el","valid","type","value","failPasswords","ajax","url","data","page","dataType","successHandler","selectShow","item","cls","push","select","join","onSelect","renderOptionRole","roles","map","role","index","renderLabels","invisible","label","renderInputs","onChange","onChangeHandler","render","to","img","head","children","link"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './Layout.scss'\nimport {NavLink} from 'react-router-dom'\nimport Auxiliary from '../Auxiliary/Auxiliary'\nimport Label from '../../components/UI/Label/Label'\nimport Input from '../../components/UI/Input/Input'\n\n\nclass Layout extends React.Component {\n    state = {\n\n    }\n    \n    // функция для отправки формы на сервер с некоторой проверкой на корректность данных\n    submitHandler = event => {\n        event.preventDefault()\n        console.log(this.props.fields)\n\n        const success = true\n        if (this.props.hTitle === 'Регистрация') {\n\n            const password1 = '', password2 = ''\n            this.props.fields.forEach(el => {\n                success = el.valid && success\n                el.type === 'password' ? \n                    password1 === '' ? \n                        password1 = el.value : \n                        password2 = el.value : \n                    null\n            })\n\n            if (password1 !== password2) {\n                this.props.failPasswords()\n            }\n        } else {\n            this.props.fields.forEach(el => {\n                success = el.valid && success\n            })\n        }\n\n        if (success) {\n            // отправка данных, включая hTitle\n            // ждем ответ от сервера\n            // прогружаем другую страницу\n\n            ajax({\n                url: '../../server/index.php',\n                // '../src/server/index.php'\n                type: 'POST',\n                data: ({page: this.props.hTitle, fields: this.props.fields}),\n                dataType: 'html',\n                success: this.successHandler\n            })\n        }\n        \n    }\n\n    successHandler = (data) => {\n        console.log(data)\n    }\n\n    // Рендерим поля для select(для выбора роли), данные о полях берем из массива state.roles\n\trenderOptionRole() {\n\t\treturn this.props.roles.map((role, index) => {\n\t\t\treturn (\n\t\t\t\t<option \n\t\t\t\t\tkey={index} \n\t\t\t\t>\n\t\t\t\t\t{role}\n\t\t\t\t</option>\n\t\t\t)\n\t\t})\n\t}\n\n    // Рендерим колону с label с помощью универсального компонента Label\n\trenderLabels() {\n\t\treturn this.props.fields.map((item, index) => {\n\t\t\treturn item.invisible ? null : <Label key={index} label={item.label} />\n\t\t})\n    }\n    \n    selectShow = item => {\n        const cls = ['select']\n        if (!item.valid) cls.push('invalid')\n\n        const select = (\n            <Auxiliary key='select'>\n                <select \n                        className={cls.join(' ')} \n                        onChange={event => this.props.onSelect(event)} \n                        required\n                >\n                    { this.renderOptionRole() }\n                </select><br />\n            </Auxiliary>\n        )\n        return select\n    }\n\n    // Рендерим колону с input с помощью универсального компонента Input\n    // но так как у нас есть поле select в регистрации, \n    // то проверяем для регистрации ли этот компонент\n    // и если это так, то потом делаем проверку на type\n\t// и в случае type='select' выводим select\n    renderInputs() {\n        if (this.props.hTitle === 'Регистрация') {\n\n            return this.props.fields.map((item, index) => {\n                return item.type === 'select' ? \n                    this.selectShow(item) : \n                    item.invisible ? null :\n                        <Input \n                            key={index} \n                            type={item.type} \n                            value={item.value}\n                            valid={item.valid}\n                            onChange={event => this.onChange(event, index)}\n                        />\n            })\n        } else {\n            return this.props.fields.map((item, index) => {\n                return <Input \n                    key={index} \n                    type={item.type} \n                    value={item.value}\n                    valid={item.valid}\n                    onChange={event => this.onChangeHandler(event, index)}\n                    />\n            })\n        }\n    }\n\n    // Рендерим компонент аутентификации\n    // так же используем NavLink из библиотеки реакта для роутинга\n    render() {\n        return (\n            <Auxiliary>\n                <header className='header'>\n                    <NavLink to={this.props.to} className='top_link'>\n                        <img src={this.props.img} alt={this.props.hTitle}/>\n                        <span>{this.props.head}</span>\n                    </NavLink>\n                </header>\n            \n                <main className=\"form_box\">\n                    <h2>{this.props.hTitle}</h2>\n\n                    <form onSubmit={this.submitHandler}>\n                        <div className='all_labels'>\n\t\t\t\t\t        { this.renderLabels() }\n\t\t\t\t        </div>\n\n\t\t\t\t        <div className='all_inputs'>\n\t\t\t\t\t        { this.renderInputs() }\n                            { this.props.children }\n\t\t\t\t        </div>\n                    </form>\n\n                    <NavLink to={this.props.to} className='link_registration'>\n                        {this.props.link}\n                    </NavLink>\n                    <select multiple={true} value={['B', 'C']}></select>\n                </main>\n            </Auxiliary>\n        )\n    }\n}\n\nexport default Layout"]},"metadata":{},"sourceType":"module"}