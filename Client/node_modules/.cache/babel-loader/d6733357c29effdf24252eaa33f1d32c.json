{"ast":null,"code":"var _jsxFileName = \"/home/oleg/Task-execution-system/Client/src/hoc/Layout/Layout.js\";\nimport React from 'react';\nimport './Layout.scss';\nimport { NavLink } from 'react-router-dom';\nimport Auxiliary from '../Auxiliary/Auxiliary';\nimport Label from '../../components/UI/Label/Label';\nimport Input from '../../components/UI/Input/Input';\n\nclass Layout extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.submitHandler = event => {\n      event.preventDefault();\n    };\n  }\n\n  // Рендерим поля для select(для выбора роли), данные о полях берем из массива state.roles\n  renderOptionRole() {\n    return this.props.roles.map((role, index) => {\n      return React.createElement(\"option\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, role);\n    });\n  } // Рендерим колону с label с помощью универсального компонента Label\n\n\n  renderLabels() {\n    console.log(this.props.fields);\n    return this.props.fields.map((item, index) => {\n      return item.invisible ? null : React.createElement(Label, {\n        key: index,\n        label: item.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      });\n    });\n  } // Рендерим колону с input с помощью универсального компонента Input\n\n\n  renderInputs() {\n    if (this.props.roles !== undefined) {\n      const select = React.createElement(Auxiliary, {\n        key: \"select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"select\",\n        onChange: event => this.props.onSelect(event.target.value),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, this.renderOptionRole()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }));\n      return this.props.fields.map((item, index) => {\n        return item.type === 'select' ? select : item.invisible ? null : React.createElement(Input, {\n          key: index,\n          type: item.type,\n          value: item.value,\n          valid: item.valid,\n          onChange: event => this.onChange(event, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        });\n      });\n    } else {\n      return this.props.fields.map((item, index) => {\n        return React.createElement(Input, {\n          key: index,\n          type: item.type,\n          value: item.value,\n          valid: item.valid,\n          onChange: event => this.onChangeHandler(event, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n      });\n    }\n  } // Рендерим компонент аутентификации\n  // так же используем NavLink из библиотеки реакта для роутинга\n\n\n  render() {\n    return React.createElement(Auxiliary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: this.props.to,\n      className: \"top_link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.img,\n      alt: this.props.hTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.props.head))), React.createElement(\"main\", {\n      className: \"form_box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.props.hTitle), React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"all_labels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.renderLabels()), React.createElement(\"div\", {\n      className: \"all_inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.renderInputs(), this.props.children)), React.createElement(NavLink, {\n      to: this.props.to,\n      className: \"link_registration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.props.link)));\n  }\n\n}\n\nexport default Layout;","map":{"version":3,"sources":["/home/oleg/Task-execution-system/Client/src/hoc/Layout/Layout.js"],"names":["React","NavLink","Auxiliary","Label","Input","Layout","Component","submitHandler","event","preventDefault","renderOptionRole","props","roles","map","role","index","renderLabels","console","log","fields","item","invisible","label","renderInputs","undefined","select","onSelect","target","value","type","valid","onChange","onChangeHandler","render","to","img","hTitle","head","children","link"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './Layout.scss'\nimport {NavLink} from 'react-router-dom'\nimport Auxiliary from '../Auxiliary/Auxiliary'\nimport Label from '../../components/UI/Label/Label'\nimport Input from '../../components/UI/Input/Input'\n\nclass Layout extends React.Component {\n    submitHandler = event => {\n        event.preventDefault()\n\n\n    }\n\n    // Рендерим поля для select(для выбора роли), данные о полях берем из массива state.roles\n\trenderOptionRole() {\n\t\treturn this.props.roles.map((role, index) => {\n\t\t\treturn (\n\t\t\t\t<option \n\t\t\t\t\tkey={index} \n\t\t\t\t>\n\t\t\t\t\t{role}\n\t\t\t\t</option>\n\t\t\t)\n\t\t})\n\t}\n\n    // Рендерим колону с label с помощью универсального компонента Label\n\trenderLabels() {\n        console.log(this.props.fields)\n\t\treturn this.props.fields.map((item, index) => {\n\t\t\treturn item.invisible ? null : <Label key={index} label={item.label} />\n\t\t})\n    }\n    \n    // Рендерим колону с input с помощью универсального компонента Input\n    renderInputs() {\n        if (this.props.roles !== undefined) {\n            const select = (\n                <Auxiliary key='select'>\n                    <select className='select' onChange={(event) => this.props.onSelect(event.target.value)} required>\n                        { this.renderOptionRole() }\n                    </select><br />\n                </Auxiliary>\n            )\n            return this.props.fields.map((item, index) => {\n                return item.type === 'select' ? \n                    select : \n                    item.invisible ? null :\n                        <Input \n                            key={index} \n                            type={item.type} \n                            value={item.value}\n                            valid={item.valid}\n                            onChange={event => this.onChange(event, index)}\n                        />\n            })\n        } else {\n            return this.props.fields.map((item, index) => {\n                return <Input \n                    key={index} \n                    type={item.type} \n                    value={item.value}\n                    valid={item.valid}\n                    onChange={event => this.onChangeHandler(event, index)}\n                    />\n            })\n        }\n    }\n\n    // Рендерим компонент аутентификации\n    // так же используем NavLink из библиотеки реакта для роутинга\n    render() {\n        return (\n            <Auxiliary>\n                <header className='header'>\n                    <NavLink to={this.props.to} className='top_link'>\n                        <img src={this.props.img} alt={this.props.hTitle}/>\n                        <span>{this.props.head}</span>\n                    </NavLink>\n                </header>\n            \n                <main className=\"form_box\">\n                    <h2>{this.props.hTitle}</h2>\n\n                    <form onSubmit={this.submitHandler}>\n                        <div className='all_labels'>\n\t\t\t\t\t        { this.renderLabels() }\n\t\t\t\t        </div>\n\n\t\t\t\t        <div className='all_inputs'>\n\t\t\t\t\t        { this.renderInputs() }\n                            { this.props.children }\n\t\t\t\t        </div>\n                    </form>\n\n                    <NavLink to={this.props.to} className='link_registration'>\n                        {this.props.link}\n                    </NavLink>\n                </main>\n            </Auxiliary>\n        )\n    }\n}\n\nexport default Layout"]},"metadata":{},"sourceType":"module"}