{"ast":null,"code":"var _jsxFileName = \"/home/oleg/Task-execution-system/Client/src/hoc/Layout/Layout.js\";\nimport React from 'react';\nimport './Layout.scss';\nimport { NavLink } from 'react-router-dom';\nimport Auxiliary from '../Auxiliary/Auxiliary';\n\nclass Layout extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.submitHandler = event => {\n      event.preventDefault();\n    };\n  }\n\n  // Рендерим колону с label с помощью универсального компонента Label\n  renderLabels() {\n    return this.props.fields.map((item, index) => {\n      return item.visible ? React.createElement(Label, {\n        key: index,\n        label: item.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }) : null;\n    });\n  } // Рендерим колону с input с помощью универсального компонента Input\n\n\n  renderInputs() {\n    if (this.props.roles) {\n      const select = React.createElement(Auxiliary, {\n        key: \"select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"select\",\n        onChange: event => this.selectRole(event.target.value),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, this.renderOptionRole()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }));\n      return this.state.fields.map((item, index) => {\n        return item.type === 'select' ? select : item.visible ? React.createElement(Input, {\n          key: index,\n          type: item.type,\n          value: item.value,\n          valid: item.valid,\n          onChange: event => this.onChangeHandler(event, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }) : null;\n      });\n    } else {\n      return this.props.fields.map((item, index) => {\n        return React.createElement(Input, {\n          key: index,\n          type: item.type,\n          value: item.value,\n          valid: item.valid,\n          onChange: event => this.onChangeHandler(event, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        });\n      });\n    }\n  } // Рендерим компонент аутентификации\n  // так же используем NavLink из библиотеки реакта для роутинга\n\n\n  render() {\n    return React.createElement(Auxiliary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: this.props.to,\n      className: \"top_link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.img,\n      alt: this.props.hTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.props.head))), React.createElement(\"main\", {\n      className: \"form_box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.props.hTitle), React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"all_labels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.renderLabels()), React.createElement(\"div\", {\n      className: \"all_inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.renderInputs(), this.props.children)), React.createElement(NavLink, {\n      to: this.props.to,\n      className: \"link_registration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.props.link)));\n  }\n\n}\n\nexport default Layout;","map":{"version":3,"sources":["/home/oleg/Task-execution-system/Client/src/hoc/Layout/Layout.js"],"names":["React","NavLink","Auxiliary","Layout","Component","submitHandler","event","preventDefault","renderLabels","props","fields","map","item","index","visible","label","renderInputs","roles","select","selectRole","target","value","renderOptionRole","state","type","valid","onChangeHandler","render","to","img","hTitle","head","children","link"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './Layout.scss'\nimport {NavLink} from 'react-router-dom'\nimport Auxiliary from '../Auxiliary/Auxiliary'\n\nclass Layout extends React.Component {\n    submitHandler = event => {\n        event.preventDefault()\n\n\n    }\n\n    // Рендерим колону с label с помощью универсального компонента Label\n\trenderLabels() {\n\t\treturn this.props.fields.map((item, index) => {\n\t\t\treturn item.visible ? <Label key={index} label={item.label} /> : null\n\t\t})\n    }\n    \n    // Рендерим колону с input с помощью универсального компонента Input\n    renderInputs() {\n        if (this.props.roles) {\n            const select = (\n                <Auxiliary key='select'>\n                    <select className='select' onChange={(event) => this.selectRole(event.target.value)} required>\n                        { this.renderOptionRole() }\n                    </select><br />\n                </Auxiliary>\n            )\n            return this.state.fields.map((item, index) => {\n                return item.type === 'select' ? \n                    select : \n                    item.visible ? \n                        <Input \n                            key={index} \n                            type={item.type} \n                            value={item.value}\n                            valid={item.valid}\n                            onChange={event => this.onChangeHandler(event, index)}\n                        /> : null\n            })\n        } else {\n            return this.props.fields.map((item, index) => {\n                return <Input \n                    key={index} \n                    type={item.type} \n                    value={item.value}\n                    valid={item.valid}\n                    onChange={event => this.onChangeHandler(event, index)}\n                    />\n            })\n        }\n    }\n\n    // Рендерим компонент аутентификации\n    // так же используем NavLink из библиотеки реакта для роутинга\n    render() {\n        return (\n            <Auxiliary>\n                <header className='header'>\n                    <NavLink to={this.props.to} className='top_link'>\n                        <img src={this.props.img} alt={this.props.hTitle}/>\n                        <span>{this.props.head}</span>\n                    </NavLink>\n                </header>\n            \n                <main className=\"form_box\">\n                    <h2>{this.props.hTitle}</h2>\n\n                    <form onSubmit={this.submitHandler}>\n                        <div className='all_labels'>\n\t\t\t\t\t        { this.renderLabels() }\n\t\t\t\t        </div>\n\n\t\t\t\t        <div className='all_inputs'>\n\t\t\t\t\t        { this.renderInputs() }\n                            { this.props.children }\n\t\t\t\t        </div>\n                    </form>\n\n                    <NavLink to={this.props.to} className='link_registration'>\n                        {this.props.link}\n                    </NavLink>\n                </main>\n            </Auxiliary>\n        )\n    }\n}\n\nexport default Layout"]},"metadata":{},"sourceType":"module"}