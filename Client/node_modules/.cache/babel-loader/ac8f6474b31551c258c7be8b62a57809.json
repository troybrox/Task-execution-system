{"ast":null,"code":"var _jsxFileName = \"/home/oleg/my-app/src/containers/Auth/Auth.js\";\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport './Auth.scss';\nimport Layout from '../../hoc/Layout/Layout';\n\nclass Auth extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fields: [{\n        value: '',\n        label: 'Логин/Email',\n        type: 'text',\n        serverName: 'Login',\n        valid: true\n      }, {\n        value: '',\n        label: 'Пароль',\n        type: 'password',\n        serverName: 'Password',\n        valid: true\n      }]\n    };\n\n    this.onSubmitHandler = event => {\n      event.preventDefault();\n      let success = true; // изначально проверка на валидность со значением true\n      // проверка полей авторизации\n\n      this.state.fields.forEach(el => {\n        success = el.valid && !!el.value && success;\n      }); // если все поля валидны, то есть success = true\n\n      if (success) {\n        this.loginHandler(); //window.location.pathname = '/'\n      } else {\n        // если success = false, то показываем какие поля невалидны\n        this.emptyFieldsHandler();\n      }\n    };\n\n    this.loginHandler = async () => {\n      const url = 'https://localhost:44303/api/account/login';\n      const data = {};\n      this.state.fields.forEach(item => {\n        data[item.serverName] = item.value;\n      });\n\n      try {\n        await axios.post(url, data);\n        window.location.pathname = '/';\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.onChangeHandler = (event, index) => {\n      let fields = [...this.state.fields];\n      let control = fields[index];\n      control.value = event.target.value;\n      control.type === 'password' ? fields[index].valid = control.value !== '' : fields[index].valid = control.value.trim() !== '';\n      fields[index] = control;\n      this.setState({\n        fields\n      });\n    };\n\n    this.emptyFieldsHandler = () => {\n      const fields = [...this.state.fields];\n      fields.forEach(el => {\n        if (el.value === '') el.valid = false;\n      });\n      this.setState({\n        fields\n      });\n    };\n  }\n\n  // Layout - компонент высшего порядка для аутентификации\n  // (универсальный для регистрации, авторизации и восстановления пароля)\n  // поэтому вносим необходимые данные компонента авторизации в props \n  // и редерим компонент Layout \n  render() {\n    return /*#__PURE__*/React.createElement(Layout, {\n      head: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\",\n      hTitle: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\",\n      link: \"\\u041D\\u0443\\u0436\\u0435\\u043D \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442? \\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435\\u0441\\u044C!\",\n      to: \"/registration\",\n      img: \"images/user.png\",\n      fields: this.state.fields,\n      onChange: this.onChangeHandler,\n      onSubmit: this.onSubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"checkbox\",\n      className: \"any_types_inputs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label check_label\",\n      htmlFor: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, \"\\u0417\\u0430\\u043F\\u043E\\u043C\\u043D\\u0438\\u0442\\u044C \\u043C\\u0435\\u043D\\u044F\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 95\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"submit any_types_inputs\",\n      type: \"submit\",\n      value: \"\\u0412\\u0445\\u043E\\u0434\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/forget\",\n      className: \"forgot_pass\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, \"\\u0417\\u0430\\u0431\\u044B\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C?\")));\n  }\n\n}\n\nexport default Auth;","map":{"version":3,"sources":["/home/oleg/my-app/src/containers/Auth/Auth.js"],"names":["React","NavLink","axios","Layout","Auth","Component","state","fields","value","label","type","serverName","valid","onSubmitHandler","event","preventDefault","success","forEach","el","loginHandler","emptyFieldsHandler","url","data","item","post","window","location","pathname","error","console","log","onChangeHandler","index","control","target","trim","setState","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport axios from 'axios'\nimport './Auth.scss'\nimport Layout from '../../hoc/Layout/Layout'\n\nclass Auth extends React.Component {\n    state = {\n        fields: [\n            { value: '', label: 'Логин/Email', type: 'text', serverName: 'Login', valid: true },\n            { value: '', label: 'Пароль', type: 'password', serverName: 'Password', valid: true }\n        ]\n    }\n\n    // функция для отправки формы на сервер с проверкой на корректность данных\n    onSubmitHandler = event => {\n        event.preventDefault()\n        \n        let success = true // изначально проверка на валидность со значением true\n\n        // проверка полей авторизации\n        this.state.fields.forEach(el => {\n            success = el.valid && !!el.value && success\n        })\n        \n        // если все поля валидны, то есть success = true\n        if (success) {  \n            this.loginHandler()  \n            //window.location.pathname = '/'\n        } else {\n            // если success = false, то показываем какие поля невалидны\n            this.emptyFieldsHandler()\n        }\n    }\n\n    loginHandler = async() => {\n        const url = 'https://localhost:44303/api/account/login'\n        const data = {}\n        this.state.fields.forEach(item => {\n            data[item.serverName] = item.value\n        })\n\n        try {\n            await axios.post(url, data)\n            window.location.pathname = '/'\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    // Отслеживаем изменение каждого input поля\n    onChangeHandler = (event, index) => {\n        let fields = [...this.state.fields]\n        let control = fields[index]\n\n        control.value = event.target.value\n\t\tcontrol.type === 'password' ? \n\t\t\tfields[index].valid = control.value !== '' : \n\t\t\tfields[index].valid = control.value.trim() !== ''\n        \n        fields[index] = control\n\n        this.setState({\n            fields\n        })\n    }\n\n    // Выявление невалидных полей\n    emptyFieldsHandler = () => {\n\t\tconst fields = [...this.state.fields]\n\t\tfields.forEach(el => {\n\t\t\tif (el.value === '') el.valid = false\n\t\t})\n\n\t\tthis.setState({fields})\n\t}\n\n\t// Layout - компонент высшего порядка для аутентификации\n\t// (универсальный для регистрации, авторизации и восстановления пароля)\n\t// поэтому вносим необходимые данные компонента авторизации в props \n\t// и редерим компонент Layout \n    render() {\n        return (\n            <Layout\n\t\t\t\thead='Регистрация'\n\t\t\t\thTitle='Авторизация'\n                link='Нужен аккаунт? Зарегистрируйтесь!'\n                to='/registration'\n                img='images/user.png'\n                fields={this.state.fields}\n                onChange={this.onChangeHandler}\n                onSubmit={this.onSubmitHandler}\n\t\t\t>\n                <input type='checkbox' id='checkbox' className='any_types_inputs' />\n                <label className='label check_label' htmlFor='checkbox'>Запомнить меня</label><br />\n                <input className='submit any_types_inputs' type='submit' value='Вход' />\n                <NavLink to='/forget' className='forgot_pass'>\n                    <span>Забыли пароль?</span>\n                </NavLink>\n\t\t\t</Layout>\n        )\n    }\n}\n\nexport default Auth"]},"metadata":{},"sourceType":"module"}